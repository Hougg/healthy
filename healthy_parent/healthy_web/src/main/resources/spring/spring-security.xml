<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/security
       http://www.springframework.org/schema/security/spring-security.xsd">

    <!--对资源放行:图标-->
    <security:http pattern="/favicon.ico" security="none"></security:http>
    <!--授权-->
    <security:http use-expressions="true" auto-config="true">
        <security:headers>
            <!--设置在页面可以通过iframe访问受保护的页面,默认为不允许访问-->
            <security:frame-options policy="SAMEORIGIN"></security:frame-options>
        </security:headers>
        <!--拦截规则-->
        <security:intercept-url pattern="/pages/**" access="isAuthenticated()"></security:intercept-url>
        <!--配置登录相关的自定义页面-->
        <security:form-login login-page="/login.html"
                             default-target-url="/pages/main.html"
                             authentication-failure-url="/login.html"
                             login-processing-url="/login.do"
                            username-parameter="username"></security:form-login>

        <!--配置退出功能-->
        <security:logout logout-url="/logout.do"
                         invalidate-session="true"
                         logout-success-url="/login.html"></security:logout>
        <security:access-denied-handler error-page="/403.html"></security:access-denied-handler>

        <!--关闭跨站请求伪造-->
        <security:csrf disabled="true"></security:csrf>
    </security:http>

    <!--创建UserDetailsService接口的实现类对象-->
    <bean id="userService" class="com.houxy.security.SpringSecurityService"></bean>
    <!--认证-->
    <security:authentication-manager>
        <!--使用加密的数据进行登录-->
        <security:authentication-provider user-service-ref="userService">
            <security:password-encoder ref="passwordEncoder"></security:password-encoder>
        </security:authentication-provider>
    </security:authentication-manager>

    <bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"></bean>
    <!--开启安全框架的注解配置-->
    <security:global-method-security pre-post-annotations="enabled"></security:global-method-security>

</beans>